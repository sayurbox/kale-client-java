plugins {
    id 'java'
    id 'eclipse'
    id "org.sonarqube" version "4.4.1.3373"
    id 'maven-publish'
}

group 'com.github.sayurbox'
version '1.9.0'

apply plugin: 'jacoco'

sourceCompatibility = '17'
targetCompatibility = '17'

repositories {
    mavenCentral()
}

publishing {
  repositories {
    maven {
      name = "KaleGitHubPackages"
      url = uri("https://maven.pkg.github.com/sayurbox/kale-client-java")
      credentials {
        username = System.getenv("GITHUB_ACTOR")
        password = System.getenv("GITHUB_TOKEN")
      }
    }
  }

  publications {
        gpr(MavenPublication) {
            from(components.java)
        }
    }

}

def mainClassName = "com.sayurbox.kale.featureflag.FeatureFlagClientImpl"

jar {
    manifest {
        attributes "Main-Class": "$mainClassName"
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

dependencies {
    implementation "org.slf4j:slf4j-api:2.0.12"
    implementation "com.squareup.okhttp3:okhttp:4.12.0"
    implementation "com.squareup.okhttp3:logging-interceptor:4.12.0"
    implementation "com.google.code.gson:gson:2.10.1"
    implementation "io.github.resilience4j:resilience4j-circuitbreaker:2.2.0"
    implementation ("io.github.resilience4j:resilience4j-all:2.2.0") {
        exclude group: 'io.github.resilience4j', module: 'resilience4j-cache'
        exclude group: 'io.github.resilience4j', module: 'resilience4j-retry'
        exclude group: 'io.github.resilience4j', module: 'resilience4j-ratelimiter'
        exclude group: 'io.github.resilience4j', module: 'resilience4j-timelimiter'
    }

    testImplementation "junit:junit:4.13.2"
    testImplementation "org.mockito:mockito-core:5.11.0"
    testImplementation "org.wiremock:wiremock:3.5.1"
}

sonar {
    properties {
        property "sonar.projectKey", "sayurbox_kale-client-java"
        property "sonar.organization", "sayurbox"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}
